
$primaryColorDark: var(--customBlue);
$primaryColor: var(--customWhite);
$borderColor: var(--customBlue);
$cornerRadius: 2vmin;

.container-bg {
  background-color: var(--customLiteBlue);
  padding-left: 2vmin;
  padding-right: 2vmin;
  border: 0 solid transparent;
  border-radius: 3vmin;
}

.container-bg h2 {
  font-size: 1.2rem;
  padding: 0.4rem 0;
  text-align: center;
}


.main-container {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  padding-bottom: 3vmin;
}

.container {
  background-color: $primaryColor;
  border-radius: $cornerRadius;
  max-width: 100%;
}

.row {
  font-weight: 600;
  font-size: 0.9rem;
}

.settingName {
  text-align: center;
  color: $primaryColor;
  background-color: $primaryColorDark;
  border-top-left-radius: $cornerRadius;
  border-bottom-left-radius: $cornerRadius;
  font-size: 0.8rem;
  font-family: "Segoe UI", sans-serif;
  font-weight: 900;
  border: 0.3vmin solid $primaryColorDark;
  padding: 1vmin;
  width: 100%;
}

.middleChoose {
  text-align: center;
  color: var(--customExtraDarkBlue);
  background-color: $primaryColor;
  border: 0.3vmin solid $primaryColorDark;
  border-right: 0;
  font-size: 0.8rem;
  font-family: "Segoe UI", sans-serif;
  font-weight: 700;
  padding: 1vmin;
  width: 100%;
}

.lastChoose {
  text-align: center;
  color: var(--customExtraDarkBlue);
  background-color: $primaryColor;
  border: 0.3vmin solid $primaryColorDark;
  border-top-right-radius: $cornerRadius;
  border-bottom-right-radius: $cornerRadius;
  font-size: 0.8rem;
  font-family: "Segoe UI", sans-serif;
  font-weight: 700;
  padding: 1vmin;
  width: 100%;
}

label {
  font-size: 0.8rem;
  padding-left: 2vmin;
}

.container-radio {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

@supports(-webkit-appearance: none) or (-moz-appearance: none) {
  input[type='checkbox'],
  input[type='radio'] {
    --active: var(--customExtraDarkBlue);
    --active-inner: #fff;
    --focus: 0.5vmin rgba(39, 94, 254, .3);
    --border: #BBC1E1;
    --border-hover: var(--customBlue);
    --background: #fff;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
    -webkit-appearance: none;
    -moz-appearance: none;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    height: 5vmin;
    border: 0.5vmin solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background .3s, border-color .3s, box-shadow .2s;
    &:after {
      content: '';
      display: block;
      left: 0;
      top: 0;
      position: absolute;
      transition: transform var(--d-t, .3s) var(--d-t-e, ease), opacity var(--d-o, .2s);
    }
    &:checked {
      --b: var(--active);
      --bc: var(--active);
      --d-o: .3s;
      --d-t: .6s;
      --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }
    &:disabled {
      --b: var(--disabled);
      cursor: not-allowed;
      opacity: .9;
      &:checked {
        --b: var(--disabled-inner);
        --bc: var(--border);
      }
      & + label {
        cursor: not-allowed;
      }
    }
    &:hover {
      &:not(:checked) {
        &:not(:disabled) {
          --bc: var(--border-hover);
        }
      }
    }
    &:focus {
      box-shadow: 0 0 0 var(--focus);
    }
    &:not(.switch) {
      width: 5vmin;
      &:after {
        opacity: var(--o, 0);
      }
      &:checked {
        --o: 1;
      }
    }
  }

  input[type='radio'] {
    border-radius: 50%;
    &:after {
      width: 4vmin;
      height: 4vmin;
      border-radius: 50%;
      background: var(--active-inner);
      opacity: 0;
      transform: scale(var(--s, .7));
    }
    &:checked {
      --s: .5;
    }
  }
}

* {
  box-sizing: inherit;
  &:before,
  &:after {
    box-sizing: inherit;
  }
}
